cc = clang
# windowsの場合は、"emcc.bat"にする
clang.exe = "emcc"
# windowsの場合は、"emcc.bat"にする
clang.linkerexe = "emcc"
clang.options.linker = ""
# WebAssemblyのVMは32bitアーキテクチャです。
# なので、i386(32bit architecture)をターゲットにします。
cpu = "i386"
# windows.hなどのOS固有のヘッダは利用できないため、常にlinuxをターゲットとしてビルドします。
os = "linux"
# コンパイラに渡すオプションです。
# WASM=1 を指定しなかった場合、emccはデフォルトでasm.jsを出力します。
# EXIT_RUNTIMEが1 (またはNO_EXIT_RUNTIMEが0)の場合、main関数の実行が完了した後にjsから
# Nimで書いたコードが呼べなくなります。
# EXPORTED_RUNTIME_METHODSには、ccall または cwrap、もしくはその両方を指定します。
# 両方を指定する場合は、EXPORTED_RUNTIME_METHODS=ccall,cwarp のようにコンマで区切ります。
passC = "-s WASM=1 -s NO_EXIT_RUNTIME=1 -s EXPORTED_RUNTIME_METHODS=ccall -O3"
# リンカに渡すオプションは、コンパイラに渡すものと揃えます。
passL = "-s WASM=1 -s NO_EXIT_RUNTIME=1 -s EXPORTED_RUNTIME_METHODS=ccall -O3"
